text to do

1. use babeljs API in /app.js
2. use browsersync API in app.js

To think:
* tasks, tasks name, ...
* what output do we want?

clean: delete build folder
prepare:
    create build folder
    create other folders
    compile scss
    compile client js
    browserifying

develop:
    start server with nodemon
    start browsersync server
    watch scss (and recompile if needed)
    watch src/client (and recompile, then rebrowserify)

production: start server prod ?

test: run test suite

migrate: run migrations

demo: add demo data
*********************************************************

proposition:
* -c --clean
* -p, --prepare-dev:
    createfolders (_build, _build/client, _build/dev, _build/dev/static, _build/dev/static/css,
        _build/dev/static/js)
    compile scss in _build/dev/static/css
    compile client js in _build/client
    browserify _build/client in _build/dev/static/js
* -P, --prepare-prod:
    createfolders (_build, _build/client, _build/prod, _build/prod/static, _build/prod/static/css,
        _build/prod/static/js)
    compile scss + minify in _build/prod/static/css
    compile client js in _build/client
    browserify _build/client in _build/dev/static/js + minify +gzip
* -s --start:
    simply start dev server
* -S --Start: start prod server
* -b --browsersync: start browsersync server
* -w watch js (then recompile/browserify in dev mode)
* -t watch css (then compile in dev mode)
* -d --develop: same as -cpsbwt, also restart server if needed



class BBWidget {
    constructor(text) {
        this.text = text;
        this.type = "Widget";
    }
    init() {
        return hg.create(h('button.lol', this.text + "bbbb"));
    }
    update(...args) {
        console.log('updating', this, ...args);
    }
    destroy() {
        console.log('destroying', this);
    }
}


pages:

/  : summary of last 7 blogs
/article/title: page with blog title
/about : short page about me (name, github, linkedin)
/login: login page
/admin: welcome page, with list of drafts
/admin/drafts/new: work on a new draft
/admin/drafts/edit/title: edit named draft
/admin/settings


mechanism to add info (with observables?) like successfull log, wrong credentials,
succesfull logout, ...

mechanism to protect pages (in router? like protected(component))?, and to display
error if not logged in


regarder http://kaye.us/ pour id√©es

Later:
a way to restart js without losing state

move css/ and js/ to static/


sidebar:
Modulo Zero

recent posts
archives
about
github, linkedin


mobile:
navbar: modulo zero, button hamburger

navbar expanded:
recent posts
archives
about
github, linkedin


footer:
if in post: previous/next
quote of the day
